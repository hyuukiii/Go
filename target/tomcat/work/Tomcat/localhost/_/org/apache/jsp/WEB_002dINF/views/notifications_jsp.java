/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-09-18 07:37:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import Notification.NotificationDTO;

public final class notifications_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

List<NotificationDTO> notifications = (List<NotificationDTO>) request.getAttribute("notifications");
String userId = (String) session.getAttribute("user_id");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<title>알림 목록</title>\n");
      out.write("<!-- Font Awesome CDN 추가 -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("\thref=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" />\n");
      out.write("<style>\n");
      out.write("* {\n");
      out.write("\tbox-sizing: border-box;\n");
      out.write("\tmargin: 0;\n");
      out.write("\tpadding: 0;\n");
      out.write("\tfont-family: 'Noto Sans KR', sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("\tbackground-color: #f8f9fa;\n");
      out.write("\tcolor: #333;\n");
      out.write("\tline-height: 1.6;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".container {\n");
      out.write("\tmax-width: 800px;\n");
      out.write("\tmargin: 0 auto;\n");
      out.write("\tpadding: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("header {\n");
      out.write("\tdisplay: flex;\n");
      out.write("\tjustify-content: space-between;\n");
      out.write("\talign-items: center;\n");
      out.write("\tpadding: 20px 0;\n");
      out.write("\tborder-bottom: 1px solid #e0e0e0;\n");
      out.write("\tmargin-bottom: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h1 {\n");
      out.write("\tfont-size: 24px;\n");
      out.write("\tcolor: #333;\n");
      out.write("\tmargin-bottom: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-list {\n");
      out.write("\tbackground-color: white;\n");
      out.write("\tborder-radius: 8px;\n");
      out.write("\toverflow: hidden;\n");
      out.write("\tbox-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-item {\n");
      out.write("\tpadding: 15px 20px;\n");
      out.write("\tborder-bottom: 1px solid #f0f0f0;\n");
      out.write("\tposition: relative;\n");
      out.write("\ttransition: background-color 0.2s;\n");
      out.write("\tdisplay: flex;\n");
      out.write("\talign-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-item:hover {\n");
      out.write("\tbackground-color: #f5f5f5;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-item:last-child {\n");
      out.write("\tborder-bottom: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-content {\n");
      out.write("\tflex-grow: 1;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-time {\n");
      out.write("\tfont-size: 12px;\n");
      out.write("\tcolor: #999;\n");
      out.write("\tmargin-top: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-unread {\n");
      out.write("\tbackground-color: #f0f7ff;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-unread::before {\n");
      out.write("\tcontent: \"\";\n");
      out.write("\tposition: absolute;\n");
      out.write("\tleft: 8px;\n");
      out.write("\ttop: 50%;\n");
      out.write("\ttransform: translateY(-50%);\n");
      out.write("\twidth: 8px;\n");
      out.write("\theight: 8px;\n");
      out.write("\tbackground-color: #4a90e2;\n");
      out.write("\tborder-radius: 50%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-actions {\n");
      out.write("\tdisplay: flex;\n");
      out.write("\tgap: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-actions button {\n");
      out.write("\tbackground: none;\n");
      out.write("\tborder: none;\n");
      out.write("\tcursor: pointer;\n");
      out.write("\tcolor: #666;\n");
      out.write("\ttransition: color 0.2s;\n");
      out.write("\tpadding: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-actions button:hover {\n");
      out.write("\tcolor: #333;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-type {\n");
      out.write("\tpadding: 3px 8px;\n");
      out.write("\tborder-radius: 12px;\n");
      out.write("\tfont-size: 12px;\n");
      out.write("\tmargin-right: 10px;\n");
      out.write("\tdisplay: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".type-bid {\n");
      out.write("\tbackground-color: #e3f2fd;\n");
      out.write("\tcolor: #1976d2;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".type-auction {\n");
      out.write("\tbackground-color: #e8f5e9;\n");
      out.write("\tcolor: #388e3c;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".type-message {\n");
      out.write("\tbackground-color: #fff3e0;\n");
      out.write("\tcolor: #f57c00;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".type-system {\n");
      out.write("\tbackground-color: #f3e5f5;\n");
      out.write("\tcolor: #7b1fa2;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".mark-all-read {\n");
      out.write("\tdisplay: inline-block;\n");
      out.write("\tbackground-color: #f0f0f0;\n");
      out.write("\tcolor: #333;\n");
      out.write("\tborder: none;\n");
      out.write("\tpadding: 8px 15px;\n");
      out.write("\tborder-radius: 4px;\n");
      out.write("\tcursor: pointer;\n");
      out.write("\tfont-size: 14px;\n");
      out.write("\ttransition: background-color 0.2s;\n");
      out.write("\tmargin-bottom: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".mark-all-read:hover {\n");
      out.write("\tbackground-color: #e0e0e0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".empty-list {\n");
      out.write("\ttext-align: center;\n");
      out.write("\tpadding: 30px;\n");
      out.write("\tcolor: #999;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".notification-icon {\n");
      out.write("\tmargin-right: 15px;\n");
      out.write("\tfont-size: 20px;\n");
      out.write("\twidth: 24px;\n");
      out.write("\theight: 24px;\n");
      out.write("\tdisplay: flex;\n");
      out.write("\talign-items: center;\n");
      out.write("\tjustify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("footer {\n");
      out.write("\tmargin-top: 30px;\n");
      out.write("\ttext-align: center;\n");
      out.write("\tcolor: #999;\n");
      out.write("\tfont-size: 14px;\n");
      out.write("\tpadding: 20px 0;\n");
      out.write("\tborder-top: 1px solid #e0e0e0;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<header>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t<h1>알림 목록</h1>\n");
      out.write("\t\t\t\t<p>최근 활동과 업데이트를 확인하세요</p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div>\n");
      out.write("\t\t\t\t");

				if (userId != null && !userId.isEmpty()) {
					out.println("<p>" + userId + "님 환영합니다</p>");
				}
				
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</header>\n");
      out.write("\n");
      out.write("\t\t");

		if (notifications != null && !notifications.isEmpty()) {
		
      out.write("\n");
      out.write("\t\t<form action=\"markAllNotificationsAsRead\" method=\"post\">\n");
      out.write("\t\t\t<button type=\"submit\" class=\"mark-all-read\">모든 알림 읽음 표시</button>\n");
      out.write("\t\t</form>\n");
      out.write("\n");
      out.write("\t\t<div class=\"notification-list\">\n");
      out.write("\t\t\t");

			for (NotificationDTO notification : notifications) {
				String notificationType = notification.getNotification_type();
				String typeClass = "";
				String icon = "";

				if ("bid".equals(notificationType)) {
					typeClass = "type-bid";
					icon = "💰";
				} else if ("auction".equals(notificationType)) {
					typeClass = "type-auction";
					icon = "🏆";
				} else if ("message".equals(notificationType)) {
					typeClass = "type-message";
					icon = "✉️";
				} else {
					typeClass = "type-system";
					icon = "🔔";
				}

				boolean isUnread = notification.getRead_status() == null || "N".equals(notification.getRead_status());
			
      out.write("\n");
      out.write("\t\t\t<div\n");
      out.write("\t\t\t\tclass=\"notification-item ");
      out.print(isUnread ? "notification-unread" : "");
      out.write("\">\n");
      out.write("\t\t\t\t<div class=\"notification-icon\">");
      out.print(icon);
      out.write("</div>\n");
      out.write("\t\t\t\t<div class=\"notification-content\">\n");
      out.write("\t\t\t\t\t<span class=\"notification-type ");
      out.print(typeClass);
      out.write('"');
      out.write('>');
      out.print(notificationType);
      out.write("</span>\n");
      out.write("\t\t\t\t\t<p>");
      out.print(notification.getMessage());
      out.write("</p>\n");
      out.write("\t\t\t\t\t<div class=\"notification-time\">");
      out.print(notification.getCreated_at());
      out.write("</div>\n");
      out.write("\t\t\t\t\t");

					if (notification.getProduct_title() != null && !notification.getProduct_title().isEmpty()) {
					
      out.write("\n");
      out.write("\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t관련 상품:\n");
      out.write("\t\t\t\t\t\t");
      out.print(notification.getProduct_title());
      out.write("</p>\n");
      out.write("\t\t\t\t\t");

					}
					
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"notification-actions\">\n");
      out.write("\t\t\t\t\t<form action=\"markNotificationAsRead\" method=\"post\"\n");
      out.write("\t\t\t\t\t\tstyle=\"display: inline;\">\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"notificationId\"\n");
      out.write("\t\t\t\t\t\t\tvalue=\"");
      out.print(notification.getNotification_id());
      out.write("\">\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" title=\"읽음 표시\">✓</button>\n");
      out.write("\t\t\t\t\t</form>\n");
      out.write("\t\t\t\t\t");

					if (notification.getRelated_product_id() > 0) {
					
      out.write("\n");
      out.write("\t\t\t\t\t<a\n");
      out.write("\t\t\t\t\t\thref=\"viewProduct?productId=");
      out.print(notification.getRelated_product_id());
      out.write("\"\n");
      out.write("\t\t\t\t\t\ttitle=\"상품 보기\" style=\"text-decoration: none;\">👁️</a>\n");
      out.write("\t\t\t\t\t");

					}
					
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t");

			}
			
      out.write("\n");
      out.write("\t\t</div>\n");
      out.write("\t\t");

		} else {
		
      out.write("\n");
      out.write("\t\t<div class=\"empty-list\">\n");
      out.write("\t\t\t<p>새로운 알림이 없습니다.</p>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t");

		}
		
      out.write("\n");
      out.write("\n");
      out.write("\t\t<form action=\"index\" method=\"get\">\n");
      out.write("\t\t\t<button type=\"submit\" style=\"padding: 8px 16px;\">← 메인으로 이동</button>\n");
      out.write("\t\t</form>\n");
      out.write("\n");
      out.write("\t\t<footer>\n");
      out.write("\t\t\t<p>&copy; 2023 경매 시스템. 모든 권리 보유.</p>\n");
      out.write("\t\t</footer>\n");
      out.write("\t</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
