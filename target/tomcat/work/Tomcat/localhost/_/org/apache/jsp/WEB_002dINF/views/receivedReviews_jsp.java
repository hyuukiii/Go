/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-09-18 07:39:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import java.util.List;
import Review.ReviewDTO;
import java.text.SimpleDateFormat;

public final class receivedReviews_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>받은 리뷰 목록</title>\n");
      out.write("    <!-- Font Awesome CDN 추가 -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" />\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: 'Arial', sans-serif;\n");
      out.write("            line-height: 1.6;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            background-color: #f9f9f9;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .container {\n");
      out.write("            width: 90%;\n");
      out.write("            max-width: 1200px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        h1 {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            color: #333;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-list {\n");
      out.write("            background-color: #fff;\n");
      out.write("            border-radius: 8px;\n");
      out.write("            box-shadow: 0 0 10px rgba(0,0,0,0.1);\n");
      out.write("            padding: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-item {\n");
      out.write("            border-bottom: 1px solid #eee;\n");
      out.write("            padding: 20px 0;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-item:last-child {\n");
      out.write("            border-bottom: none;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-header {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            margin-bottom: 15px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-info {\n");
      out.write("            flex: 1;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .reviewer-id {\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #333;\n");
      out.write("            margin-right: 10px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-date {\n");
      out.write("            color: #777;\n");
      out.write("            font-size: 0.9em;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .product-title {\n");
      out.write("            font-weight: bold;\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("            color: #2c3e50;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .rating {\n");
      out.write("            margin-bottom: 10px;\n");
      out.write("            color: #f39c12;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .review-content {\n");
      out.write("            margin-top: 10px;\n");
      out.write("            color: #444;\n");
      out.write("            line-height: 1.5;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .no-reviews {\n");
      out.write("            text-align: center;\n");
      out.write("            padding: 30px;\n");
      out.write("            color: #777;\n");
      out.write("            font-style: italic;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .back-btn {\n");
      out.write("            display: inline-block;\n");
      out.write("            margin-top: 20px;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            background-color: #3498db;\n");
      out.write("            color: white;\n");
      out.write("            text-decoration: none;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            transition: background-color 0.3s;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .back-btn:hover {\n");
      out.write("            background-color: #2980b9;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .header {\n");
      out.write("            background-color: #ffffff;\n");
      out.write("            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n");
      out.write("            padding: 15px 20px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .header-content {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: space-between;\n");
      out.write("            max-width: 1200px;\n");
      out.write("            margin: 0 auto;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- 헤더 -->\n");
      out.write("    <div class=\"header\">\n");
      out.write("        <div class=\"header-content\">\n");
      out.write("            <h2><a href=\"index\" style=\"text-decoration: none; color: inherit;\">옥션 플랫폼</a></h2>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <h1>받은 리뷰 목록</h1>\n");
      out.write("        \n");
      out.write("        <div class=\"review-list\">\n");
      out.write("            ");

            List<ReviewDTO> receivedReviews = (List<ReviewDTO>) request.getAttribute("receivedReviews");
            
            if(receivedReviews != null && !receivedReviews.isEmpty()) {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
                
                for(ReviewDTO review : receivedReviews) {
            
      out.write("\n");
      out.write("                <div class=\"review-item\">\n");
      out.write("                    <div class=\"review-header\">\n");
      out.write("                        <div class=\"review-info\">\n");
      out.write("                            <span class=\"reviewer-id\">");
      out.print(review.getReviewerId());
      out.write("</span>\n");
      out.write("                            <span class=\"review-date\">");
      out.print(sdf.format(review.getReviewDate()));
      out.write("</span>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"rating\">\n");
      out.write("                            ");
 for(int i = 0; i < review.getRating(); i++) { 
      out.write("\n");
      out.write("                                <i class=\"fas fa-star\"></i>\n");
      out.write("                            ");
 } 
      out.write("\n");
      out.write("                            ");
 for(int i = 0; i < 5 - review.getRating(); i++) { 
      out.write("\n");
      out.write("                                <i class=\"far fa-star\"></i>\n");
      out.write("                            ");
 } 
      out.write("\n");
      out.write("                            (");
      out.print(review.getRating());
      out.write("/5)\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"product-title\">상품: ");
      out.print(review.getProductTitle());
      out.write("</div>\n");
      out.write("                    <div class=\"review-content\">");
      out.print(review.getDescription());
      out.write("</div>\n");
      out.write("                </div>\n");
      out.write("            ");

                }
            } else {
            
      out.write("\n");
      out.write("                <div class=\"no-reviews\">\n");
      out.write("                    <p>받은 리뷰가 없습니다.</p>\n");
      out.write("                </div>\n");
      out.write("            ");

            }
            
      out.write("\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <a href=\"index\" class=\"back-btn\">메인으로 돌아가기</a>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
